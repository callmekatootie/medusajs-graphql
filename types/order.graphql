enum FulfillmentStatus {
  CANCELED
  FULFILLED
  NOTFULFILLED
  PARTIALLYFULFILLED
  PARTIALLYRETURNED
  PARTIALLYSHIPPED
  RETURNED
  REQUIRESACTION
  SHIPPED
}

enum OrderStatus {
  ARCHIVED
  CANCELED
  COMPLETED
  PENDING
  REQUIRES_ACTION
}

enum PaymentStatus {
  AWAITING
  CANCELED
  CAPTURED
  NOTPAID
  PARTIALLYREFUNDED
  REFUNDED
  REQUIRESACTION
}

input ShippingAddressQuery {
  postal_code: String
}

type Order {
  id: ID!
  billing_address_id: ID
  billing_address: Address
  canceled_at: String
  cart_id: ID
  cart: Cart
  claims: [ClaimOrder!]!
  currency_code: String!
  currency: Currency
  customer_id: ID!
  customer: Customer
  discounts: [Discount!]!
  discount_total: Float
  display_id: ID
  draft_order_id: ID
  draft_order: DraftOrder
  edits: [OrderEdit!]!
  email: String!
  external_id: String
  fulfillments: [Fulfillment!]!
  fulfillment_status: FulfillmentStatus
  gift_cards: [GiftCard!]!
  gift_card_tax_total: Float
  gift_card_total: Float
  gift_card_transactions: [GiftCardTransaction!]!
  idempotency_key: String
  items: [LineItem!]!
  metadata: String
  no_notification: Boolean
  paid_total: Float
  payments: [Payment!]!
  payment_status: PaymentStatus
  region_id: ID!
  region: Region
  refundable_amount: Float
  refunded_total: Float
  refunds: [Refund!]!
  returns: [Return!]!
  sales_channel_id: ID
  sales_channel: SalesChannel
  shipping_address_id: ID
  shipping_address: Address
  shipping_methods: [ShippingMethod!]!
  shipping_total: Float
  status: OrderStatus
  subtotal: Float
  swaps: [Swap!]!
  tax_rate: Float
  tax_total: Float
  total: Float
}

type Query {
  getOrder(id: ID!): Order
  getOrderByCartId(cart_id: ID!): Order
  lookupOrder(display_id: Int!, email: String!, shipping_address: ShippingAddressQuery): Order
}
